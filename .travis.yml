language: generic
dist: trusty

env:
  global:
    # For pushing documentation
    - ENCRYPTION_LABEL: "388c738922bf"
    - COMMIT_AUTHOR_EMAIL: "topisani@hamsterpoison.com"

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps

matrix:
  include:

    # Linux, Clang 5.0, Debug, libc++
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - gdb-minimal
            - libjack-jackd2-dev
            - libgles2-mesa-dev
            - libxrandr-dev
            - libxinerama-dev
            - libxcursor-dev
            - libxi-dev
      env:
        - CC=clang-5.0 CXX=clang++-5.0
        - BUILD_TYPE=Debug
        - USE_LIBCXX=1

    # Linux, Clang 5.0, Release, libstdc++
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-5.0
            - libstdc++-7-dev
            - gdb-minimal
            - libjack-jackd2-dev
            - libgles2-mesa-dev
            - libxrandr-dev
            - libxinerama-dev
            - libxcursor-dev
            - libxi-dev
      env:
        - CC=clang-5.0 CXX=clang++-5.0
        - BUILD_TYPE=Release
        - USE_LIBCXX=0

    # Linux, GCC, Debug, libstdc++
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - gdb-minimal
            - libjack-jackd2-dev
            - libgles2-mesa-dev
            - libxrandr-dev
            - libxinerama-dev
            - libxcursor-dev
            - libxi-dev
      env:
        - CC=gcc-7 CXX=g++-7
        - BUILD_TYPE=Debug
        - USE_LIBCXX=0

    # OSX, GCC, Debug, libc++
    - os: osx
      osx_image: xcode9.1
      env:
        - CC=clang CXX=clang++
        - MATRIX_EVAL="brew update; brew install gdb llvm"
        - LDFLAGS="-L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"
        - PATH="/usr/local/opt/llvm/bin:$PATH"
        - USE_LIBCXX=1

  allow_failures:
    # OSX is set to allowed failure, as it often takes a very long time to build
    - os: osx

before_install:
  - eval $MATRIX_EVAL

install:
  - $CXX --version

  # Dependencies required by the CI are installed in ${TRAVIS_BUILD_DIR}/deps/
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p "${DEPS_DIR}"
  - cd "${DEPS_DIR}"

  # Travis machines have 2 cores
  - JOBS=2

  # Install cmake
  - CMAKE_VERSION=3.9.2
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake || brew upgrade cmake
    fi

  - cmake --version

  # [linux]: Install the right version of libc++
  - |
    LLVM_INSTALL=${DEPS_DIR}/llvm/install
    # if in linux and compiler clang and llvm not installed
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "$USE_LIBCXX" == "1" && ! -d $LLVM_INSTALL ]]; then
    if   [[ "${CXX}" == "clang++-5.0" ]]; then LLVM_VERSION="5.0.0";
    fi
    LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
    LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
    LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
    mkdir -p llvm llvm/build llvm/projects/libcxx llvm/projects/libcxxabi
    travis_retry wget -O - ${LLVM_URL} | tar --strip-components=1 -xJ -C llvm
    travis_retry wget -O - ${LIBCXX_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxx
    travis_retry wget -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxxabi
    (cd llvm/build && cmake .. -DCMAKE_INSTALL_PREFIX=${LLVM_INSTALL})
    (cd llvm/build/projects/libcxx && make install -j2)
    (cd llvm/build/projects/libcxxabi && make install -j2)
    fi
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "$USE_LIBCXX" == "1" ]]; then
    export CXXFLAGS="-isystem ${LLVM_INSTALL}/include/c++/v1"
    export LDFLAGS="-L ${LLVM_INSTALL}/lib -l c++ -l c++abi"
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${LLVM_INSTALL}/lib"
    echo "Testing libc++: "
    echo "int main() { return 0; }" | $CXX -x c++ -stdlib=libc++ -L $LLVM_INSTALL/lib -
    fi

  # [OSX]: Install jack
  - |
    JACK_INSTALL=$DEPS_DIR/jack2/install
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
    brew install aften
    if [[ ! -d $JACK_INSTALL ]]; then
    git clone https://github.com/jackaudio/jack2
    cd jack2
    mkdir install
    brew outdated pkg-config || brew upgrade pkg-config
    ./waf configure --opus=no --readline=no --prefix=./install
    ./waf build
    ./waf install
    fi
    export CXXFLAGS="$CXXFLAGS -I$JACK_INSTALL/include"
    export LDFLAGS="$LDFLAGS -L ${JACK_INSTALL}/lib"
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${JACK_INSTALL}/lib"
    fi

before_script:
  - cd "${TRAVIS_BUILD_DIR}"
  - mkdir build && cd build
  - export CXXFLAGS="$CXXFLAGS -Werror"
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DOTTO_USE_LIBCXX=$USE_LIBCXX $CMAKE_OPTIONS

script:
  - cd "${TRAVIS_BUILD_DIR}"
  - cmake --build build -- -j${JOBS}
  - build/bin/test -s || RESULT=$?
  - |
    if [[ -n "$RESULT" ]]; then
    echo "Tests failed, running in GDB for stacktrace"
    gdb -return-child-result -batch -ex "run -s" -ex "thread apply all bt" -ex "quit" --args build/bin/test
    fi

notifications:
  email: false
